x-kong-config: &kong-config
  KONG_DATABASE: off
  KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
  KONG_PG_HOST: kong-db
  KONG_PG_USER: ${KONG_PG_USER}
  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
  KONG_PG_DATABASE: ${KONG_PG_DATABASE}
  KONG_PROXY_ACCESS_LOG: /var/log/kong/proxy_access.log
  KONG_PROXY_ERROR_LOG: /var/log/kong/proxy_error.log
  KONG_ADMIN_ACCESS_LOG: /var/log/kong/admin_access.log
  KONG_ADMIN_ERROR_LOG: /var/log/kong/admin_error.log
  KONG_ADMIN_GUI_LISTEN: 0.0.0.0:${KONG_ADMIN_GUI_PORT}
  KONG_PROXY_LISTEN: 0.0.0.0:${KONG_PROXY_PORT}, 0.0.0.0:${KONG_SSL_PROXY_PORT} ssl
  KONG_ADMIN_LISTEN: 0.0.0.0:${KONG_ADMIN_PORT}, 0.0.0.0:${KONG_SSL_ADMIN_PORT} ssl
  KONG_LOG_LEVEL: debug
  KONG_PLUGINS: bundled,file-log,prometheus
  KONG_PLUGIN_FILE_LOG_PATH: /var/log/kong/custom.log
  KONG_PLUGIN_FILE_LOG_REOPEN: "true"
  KONG_SSL_CERT: /etc/kong/ssl/kong.crt
  KONG_SSL_CERT_KEY: /etc/kong/ssl/kong.key


networks:
  kong-net:
    driver: bridge

services:
  kong:
    build:
      context: ./kong
      dockerfile: Dockerfile
    environment:
      <<: *kong-config
    ports:
      - "${KONG_PROXY_PORT}:${KONG_PROXY_PORT}"  # 8000
      - "${KONG_ADMIN_PORT}:${KONG_ADMIN_PORT}"  # 8001
      - "${KONG_ADMIN_GUI_PORT}:${KONG_ADMIN_GUI_PORT}"  # 8002
      - "${KONG_SSL_PROXY_PORT}:${KONG_SSL_PROXY_PORT}"  # 8443
      - "${KONG_SSL_ADMIN_PORT}:${KONG_SSL_ADMIN_PORT}"  # 8444
      - "8002:8002"  # Prometheus metrics
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: unless-stopped
    volumes:
      - ./kong-logs:/var/log/kong
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./kong.yml:/usr/local/kong/declarative/kong.yml:ro
      - ./kong/ssl:/etc/kong/ssl:ro
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  backend-1:
    build:
      context: ./comic-web/backend
      dockerfile: Dockerfile
    container_name: django-backend-1
    networks:
      - kong-net
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  backend-2:
    build:
      context: ./comic-web/backend
      dockerfile: Dockerfile
    container_name: django-backend-2
    networks:
      - kong-net
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  backend-3:
    build:
      context: ./comic-web/backend
      dockerfile: Dockerfile
    container_name: django-backend-3
    networks:
      - kong-net
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  logging-service:
    build:
      context: ./logging-service
      dockerfile: Dockerfile
    container_name: logging-service
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "8081:8080"
      - "8003:8001"
    networks:
      kong-net:
        aliases:
          - logging-service
    volumes:
      - ./kong-logs:/app/logs
      - ./kong-service-logs:/app/service_logs
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:v2.54.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - kong-net
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  grafana:
    image: grafana/grafana:11.2.0
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - kong-net
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - kong-net
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.0
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./kong-logs:/var/log/kong:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - kong-net
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - kong-net
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD